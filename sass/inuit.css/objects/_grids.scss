@if $use-grids == true{

/*------------------------------------*\
    $GRIDS
\*------------------------------------*/
/**
 * Fluid and nestable grid system, e.g.:
 *
   <div class="grid">

       <div class="grid__item  one-third">
           <p>One third grid</p>
       </div><!--

    --><div class="grid__item  two-thirds">
           <p>Two thirds grid</p>
       </div><!--

    --><div class="grid__item  one-half">
           <p>One half grid</p>
       </div><!--

    --><div class="grid__item  one-quarter">
           <p>One quarter grid</p>
       </div><!--

    --><div class="grid__item  one-quarter">
           <p>One quarter grid</p>
       </div>

   </div>
 *
 * Demo: jsfiddle.net/inuitcss/CLYUC
 *
 */


/**
 * Grid wrapper
 */
.grid{
    margin-left:-$grid-unit*2;
    list-style:none;
    margin-bottom:0;
}


    /**
     * Very infrequently occuring grid wrappers as children of grid wrappers.
     */
    .grid > .grid{
        margin-left:0;
    }


    /**
     * Grid
     */
    .grid__item{
        display:inline-block;
        width:100%;
        padding-left:$grid-unit*2;
        vertical-align:top;
        box-sizing: border-box;
    }

}//endif





// narrow left and right columns
// -----------------------------
@mixin skinny-col($namespace: "") {
    .skinny-left#{$namespace} > :first-child { margin-left: $grid-unit; }
    .skinny-right#{$namespace} > :first-child { margin-right: $grid-unit; }
}

@include skinny-col();

@media (max-width: $screen-sm-max) {
    @include skinny-col("-mobile");
}

@media (min-width: $screen-md) {
    @include skinny-col("-tablet");
}

@media (min-width: $screen-lg) {
    @include skinny-col("-desktop");
}

/*
 * generates:
 *
 * .skinny-left > :first-child { margin-left: 16px; }
 * .skinny-right > :first-child { margin-right: 16px; }
 *
 * @media (max-width: 47.9375em) {
 *     .skinny-left-mobile > :first-child { margin-left: 16px; }
 *
 *     etc...
 */























