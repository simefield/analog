@charset "UTF-8";


@import "icon-fonts";

/**
 * Variables
 */
$link: #3ae3e9; // blue
$link: #c92b25; // red
$link-medium: rgba($link, 0.55);
// $link-light: rgba($link, 0.2); // #d5f6f5
$link-light: #d5f6f5;
// $black: #070706;
$white: #fbfbf8;
// $brown: #4e4c48;
$brown: #433f38;
$brown-medium: rgba($brown, 0.7);
$brown-light: rgba($brown, 0.3);
$brown-extra-light: rgba($brown, 0.15);
// $brown-light: rgba($brown, 0.4);
$padding: 20px;
$padding-large: 60px;
$padding-large: 56px;
// $item-height: 67px; // 9 list items
$item-height: 50px; // 11 list items
$transition-speed: 0.35s;




/**
 * Helpers
 */
.console {Xdisplay: none; background: $brown; height: 16px; line-height: 16px; padding-left: $padding; @extend %border-box; position: fixed; left: 0; bottom: 0; color: $white; white-space: nowrap; width: 100%; z-index: 50; font-size: 10px;}

%reset {
    padding: 0;
    margin: 0;
}
%border-box {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
}
%din {
    font-family: 'DIN Alternate', sans-serif;
    font-size: 12px;
    letter-spacing: 1.5px;
    color: $brown;
}
%thin {
    font-family: 'DIN Condensed', AppleSDGothicNeo-Thin, AppleSDGothicNeo-Light;
}
%fix-webkit-font-rendering {
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
}

* {
    -webkit-tap-highlight-color: rgba(0,0,0,0); /* make transparent link selection, adjust last value opacity 0 to 1.0 */
    -webkit-text-size-adjust: none; /* http://rakaz.nl/2009/09/iphone-webapps-101-getting-safari-out-of-the-way.html */
    // -webkit-user-select: none;
}

::-webkit-input-placeholder { /* WebKit browsers */
    color: $link;
}

body {
    @extend %reset;
    -webkit-touch-callout: none;                /* prevent callout to copy image, etc when tap to hold */
    -webkit-text-size-adjust: none;             /* prevent webkit from resizing text to fit */
    -webkit-user-select: none;                  /* prevent copy paste, to allow, change 'none' to 'text' */
    background-attachment:fixed;
    // font-family: 'HelveticaNeue-Light', 'HelveticaNeue', Helvetica, Arial, sans-serif;
    @extend %din;
    font-weight: normal;
    text-transform: uppercase;

    background-color: $white;
    height:100%;
    width:100%;
}

a, a:visited, a:focus, a:active, a:hover {
    text-decoration: none;
    color: $link;
}











body {
    overflow: hidden;
}

/*li*/.title {
    background-color: $brown;

    h1 {
        @extend %din;
        // color: $white;
        color: #dddcd9;
        font-weight: normal;
        text-transform: uppercase;
        margin: 0;
        padding-left: $padding;

        + span {
            position: absolute;
            font-size: 9px;
            top: 28px;
            line-height: 1rem;
            left: $padding;
            letter-spacing: 0;
            // color: $brown-light;
            color: #c2c0bc;
            white-space: nowrap;
        }
    }
}

ul {
    @extend %reset;
    list-style: none;

    li {
        @extend %fix-webkit-font-rendering; // doesn't appear to make a difference
        @extend %reset;
        @extend %border-box;
        padding-right: $padding;
        width: 100%;
        height: $item-height; // for 'hide' animation purposes
        position: relative;
        padding-top: 0;
        // background-color: orange;

        // 1 physical pixel on retina: https://excellenteasy.com/devblog/posts/how-to-target-physical-pixels-on-retina-screens-with-css/ 
        @media only screen and (-webkit-min-device-pixel-ratio: 2.00), only screen and (min--moz-device-pixel-ratio: 2.00), only screen and (-o-min-device-pixel-ratio: 2.00/1), only screen and (min-device-pixel-ratio: 2.00), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2.00dppx) {
            background-image: linear-gradient(0deg, $brown-light, $brown-light 50%, transparent 50%);
            background-size: 100% 1px;
            background-repeat: no-repeat;
            background-position: bottom;
        }
        // desktop
        @media (-webkit-device-pixel-ratio: 1), (max-resolution: 72dpi) { 
            border-bottom: 1px solid $brown-light;
        }

        &:last-child, &:nth-last-child(2) {
            background-image: none;
        }

        span {
            display: block;
        }

        input {
            padding-bottom: 4px;
            height: $item-height - 4;
            width: calc(100% - $padding-large); // left indent for check boxes - see comment under .new-item below
            // transition: all $transition-speed ease-in-out;
            @extend %reset;
            @extend %din;
            border: none;
            text-transform: uppercase;
            background-color: transparent;

            &:focus {
                outline: none;
            }
        }

        &.hide {
            transition: all $transition-speed ease-in-out;
            height: 0;
            overflow: hidden;
            left: -50%;
            background-image: none;
        }

        &.new-item {
            // background-color: $link-medium;
            background-color: $link;
            color: $white;
            // padding-left: $padding-large; // the new item would register 'tap' event when hiding list-item directly above it: https://github.com/madrobby/zepto/issues/511
            padding-left: $padding;
            @extend %border-box;

            button {
                @extend %reset;
                @extend %din;
                // padding-left: $padding-large;
                // @extend %border-box;
                border: none;
                line-height: $item-height;
                outline: none;
                width: 100%;
                color: $white;
                background-color: transparent;
                text-align: left;
                text-transform: uppercase;
            }
        }

        &.dragging {
            background-color: $link-light;
            position: absolute;
            // @extend %border-box;
            background-image: none;
            z-index: 100;

            pointer-events: none;
            
            // temporarily hide the item number / checkbox during drag
            .check {
                opacity: 0;
            }
        }
        &.clone {
            position: relative;
            z-index: 50;
            background-color: transparent;
            // background-color: $brown;
            // hide inner elements while this is acting as a placeholder for dragged item
            i, input {
                opacity: 0;
            }
            @media only screen and (-webkit-min-device-pixel-ratio: 2.00), only screen and (min--moz-device-pixel-ratio: 2.00), only screen and (-o-min-device-pixel-ratio: 2.00/1), only screen and (min-device-pixel-ratio: 2.00), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2.00dppx) {
                background-image: linear-gradient(0deg, $brown-light, $brown-light 50%, transparent 50%);
                background-size: 100% 1px;
                background-repeat: no-repeat;
                background-position: bottom;
            }

        }
        &.moved {
            background-color: orange;
        }
        
        // // animate items while dragging moving down
        // &.move-up {
        //     // animation: bounce-up 300ms;
        //     -webkit-animation: bounce-down 1000ms cubic-bezier(0.075, 0.82, 0.165, 1);
        // }
        // // animate items while dragging moving up
        // &.move-down {
        //     // animation: bounce-up 300ms;
        //     -webkit-animation: bounce-up 1000ms cubic-bezier(0.075, 0.82, 0.165, 1);
        // }

        // animate items while dragging moving down
        &.move {
            // -webkit-animation: spring 1000ms cubic-bezier(0.075, 0.82, 0.165, 1);
            -webkit-animation: spring 300ms cubic-bezier(0.420, 0.000, 1.000, 0.500); 
            background-color: $brown;
        }
    }
}
// @-webkit-keyframes spring {
//     from {
//         // height: $item-height;
//         margin-top: 0;
//         margin-bottom: 0;
//          // background-color: yellow;
//     }
//     to {
//         // height: $item-height*0.8;
//         margin-top: $item-height;
//         margin-bottom: $item-height;
//     }
// }

// @keyframes bounce-up {
//     from { opacity: 1.0; }
//     50% { opacity: 0.4; }
//     to { opacity: 1.0; }
// }
 
// @-webkit-keyframes bounce-up {
//     from {
//         height: $item-height*2;
//         padding-top: $item-height;
//     }
//     to {
//         height: $item-height;
//         padding-top: 0;
//          // background-color: yellow;
//     }
// }
// @-webkit-keyframes bounce-down {
//     from {
//         height: $item-height*2;
//         padding-bottom: 0;
//     }
//     to {
//         height: $item-height;
//         padding-top: 0;
//         // background-color: red;
//     }
// }




.list-wrapper {
    line-height: $item-height;
}

.check {
    font-style: normal;
    text-align: center;
    // line-height: 28px; // don't know why!?
    color: $brown-extra-light;
    // color: red;
    display: inline-block;
    float: left;
    position: relative;
    width: $padding-large;
    height: $item-height;
    // padding-left: 6px;
    letter-spacing: 0;
    // padding-right: $padding;
    
    // background: pink;
    // z-index: 30;

    font-size: 9px;
    color: $brown-medium;
    text-indent: 3px;


    &::after {
        content: '';
        position: absolute;
        bottom: 12px;
        left: 17px;

        width: 26px;
        height: 26px;
        border-radius: 100%;
        // top: 13px;
        background: radial-gradient(circle, rgba($brown, 0) 12px, rgba($brown, 1) 100%), radial-gradient(circle, rgba($brown, 0) 12px, rgba($brown, 1) 100%);
    }
    
    &.remove {
        color: $white;
        &::after {
            background: none;
            background-color: $link-medium;
        }
    }
}

/*textarea*/.button-focus {
    // display: none;
    position: absolute;
    opacity: 0;
    background: transparent;
    // line-height: 0;
    @extend %border-box;
    border-radius: 0;
    outline: 0;
    border: none;
    height: $item-height;
    line-height: 0;
    font-size: 0;
    width: calc(100% - $padding-large);
    left: $padding-large;
    top: 0;
}

/*a*/.save {
    color: $white !important;
    position: absolute;
    right: 0;
    // z-index: 40;
    // float: right;
    padding: 0 $padding;
    // background: red;
    // opacity: 0.5;
    line-height: $item-height;

    // // 1 physical pixel on retina: https://excellenteasy.com/devblog/posts/how-to-target-physical-pixels-on-retina-screens-with-css/ 
        @media only screen and (-webkit-min-device-pixel-ratio: 2.00), only screen and (min--moz-device-pixel-ratio: 2.00), only screen and (-o-min-device-pixel-ratio: 2.00/1), only screen and (min-device-pixel-ratio: 2.00), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2.00dppx) {
            border-left: none;
            background-image: linear-gradient(90deg, $white, $white 50%, transparent 50%);
            background-size: 1px 100%;
            background-repeat: no-repeat;
            background-position: bottom left;
        }

    i {
        font-style: normal;
    }
}


.btn {
    padding-right: $padding;
}


